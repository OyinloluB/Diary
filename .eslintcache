[{"C:\\Users\\HP\\Documents\\Tests\\dphi\\diary\\src\\index.js":"1","C:\\Users\\HP\\Documents\\Tests\\dphi\\diary\\src\\reportWebVitals.js":"2","C:\\Users\\HP\\Documents\\Tests\\dphi\\diary\\src\\App.js":"3","C:\\Users\\HP\\Documents\\Tests\\dphi\\diary\\src\\main\\Main.js":"4","C:\\Users\\HP\\Documents\\Tests\\dphi\\diary\\src\\components\\notes\\Notes.js":"5","C:\\Users\\HP\\Documents\\Tests\\dphi\\diary\\src\\components\\notes\\Note.js":"6","C:\\Users\\HP\\Documents\\Tests\\dphi\\diary\\src\\layout\\side-nav\\SideNav.js":"7","C:\\Users\\HP\\Documents\\Tests\\dphi\\diary\\src\\layout\\top-nav\\search\\Search.js":"8","C:\\Users\\HP\\Documents\\Tests\\dphi\\diary\\src\\layout\\top-nav\\nav\\TopNav.js":"9","C:\\Users\\HP\\Documents\\Tests\\dphi\\diary\\src\\layout\\top-nav\\buttons\\Filter.js":"10","C:\\Users\\HP\\Documents\\Tests\\dphi\\diary\\src\\layout\\top-nav\\buttons\\Sort.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":152,"mtime":1609324574910,"results":"15","hashOfConfig":"13"},{"size":2614,"mtime":1609687926926,"results":"16","hashOfConfig":"13"},{"size":1609,"mtime":1609688187851,"results":"17","hashOfConfig":"13"},{"size":2361,"mtime":1609688177545,"results":"18","hashOfConfig":"13"},{"size":1136,"mtime":1609514632434,"results":"19","hashOfConfig":"13"},{"size":632,"mtime":1609679578798,"results":"20","hashOfConfig":"13"},{"size":601,"mtime":1609685730744,"results":"21","hashOfConfig":"13"},{"size":478,"mtime":1609685914998,"results":"22","hashOfConfig":"13"},{"size":394,"mtime":1609685191656,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"15ltat",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\Documents\\Tests\\dphi\\diary\\src\\index.js",[],["50","51"],"C:\\Users\\HP\\Documents\\Tests\\dphi\\diary\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Documents\\Tests\\dphi\\diary\\src\\App.js",[],"C:\\Users\\HP\\Documents\\Tests\\dphi\\diary\\src\\main\\Main.js",["52"],"import React, { useEffect, useState } from \"react\";\r\nimport Notes from \"../components/notes/Notes\";\r\nimport SideNav from \"../layout/side-nav/SideNav\";\r\n\r\nimport Styles from \"./main.module.scss\";\r\n\r\nconst Main = () => {\r\n  const [form, setForm] = useState([]);\r\n  const [sort, setSort] = useState(\"Newest\");\r\n  const [filter, setFilter] = useState(\"Year\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const colorPicker = [\"#f5972c\", \"#f3542a\", \"#bec5d7\", \"#0aa4f6\", \"#c6d947\"];\r\n\r\n  console.log(form.find((item) => console.log(item)));\r\n\r\n  let sample;\r\n  useEffect(() => {\r\n    sample = localStorage.getItem(\"Form\");\r\n    if (sample) {\r\n      setForm(JSON.parse(sample));\r\n    }\r\n  }, []);\r\n\r\n  const handleAddButton = (index) => {\r\n    const inputState = {\r\n      note: \"\",\r\n      date: \"\",\r\n      color: index,\r\n      currentDate: new Date(),\r\n      id: form.length + 1,\r\n    };\r\n\r\n    setForm((prev) => [...prev, inputState]);\r\n  };\r\n\r\n  const handleChange = (noteId, noteValue) => {\r\n    setForm(\r\n      form.map((item) =>\r\n        item.id === noteId ? { ...item, note: noteValue } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleDate = (noteId, inputedDate) => {\r\n    setForm(\r\n      form.map((item) =>\r\n        item.id === noteId ? { ...item, date: inputedDate } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const saveAllNotes = () => {\r\n    localStorage.setItem(\"Form\", JSON.stringify(form));\r\n  };\r\n\r\n  const handleSort = (e) => {\r\n    setSort(e.target.value);\r\n  };\r\n\r\n  const handleFilter = (e) => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const deleteNote = (e, index) => {\r\n    e.preventDefault();\r\n\r\n    localStorage.setItem(\r\n      \"Form\",\r\n      JSON.stringify([...form].filter((item) => item !== form[index]))\r\n    );\r\n    setForm([...form].filter((item) => item !== form[index]));\r\n  };\r\n\r\n  const searchDate = (e) => {\r\n    setSearch(e.target.value);\r\n\r\n    const filtered = form.filter((entry) =>\r\n      Object.values(entry).some(\r\n        (val) => typeof val === \"string\" && val.toLowerCase().includes(search)\r\n      )\r\n    );\r\n\r\n    setForm(filtered);\r\n  };\r\n\r\n  return (\r\n    <div className={Styles.container}>\r\n      <SideNav colorPicker={colorPicker} handleAddButton={handleAddButton} />\r\n      <Notes\r\n        saveAllNotes={saveAllNotes}\r\n        handleChange={handleChange}\r\n        handleFilter={handleFilter}\r\n        handleDate={handleDate}\r\n        deleteNote={deleteNote}\r\n        searchDate={searchDate}\r\n        handleSort={handleSort}\r\n        search={search}\r\n        sort={sort}\r\n        filter={filter}\r\n        form={form}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\HP\\Documents\\Tests\\dphi\\diary\\src\\components\\notes\\Notes.js",["53","54","55"],"import React, { useState } from \"react\";\r\nimport TopNav from \"../../layout/top-nav/nav/TopNav\";\r\nimport Search from \"../../layout/top-nav/search/Search\";\r\n\r\nimport Note from \"./Note\";\r\n\r\nimport Styles from \"./note.module.scss\";\r\n\r\nconst Notes = ({\r\n  saveAllNotes,\r\n  handleChange,\r\n  isNoteSaved,\r\n  handleFilter,\r\n  handleDate,\r\n  handleSort,\r\n  deleteNote,\r\n  searchDate,\r\n  saveNote,\r\n  search,\r\n  filter,\r\n  sort,\r\n  form,\r\n}) => {\r\n  const sortedNotes = form.sort((a, b) => {\r\n    if (sort === \"Newest\") {\r\n      return (\r\n        new Date(b.currentDate).getTime() - new Date(a.currentDate).getTime()\r\n      );\r\n    } else if (sort === \"Oldest\") {\r\n      return (\r\n        new Date(a.currentDate).getTime() - new Date(b.currentDate).getTime()\r\n      );\r\n    }\r\n  });\r\n\r\n  console.log(sort);\r\n  return (\r\n    <div className={Styles.notes}>\r\n      <TopNav\r\n        searchDate={searchDate}\r\n        search={search}\r\n        handleSort={handleSort}\r\n        handleFilter={handleFilter}\r\n      />\r\n      <div>\r\n        <h3>Notes</h3>\r\n      </div>\r\n      <div className={Styles.notes_container}>\r\n        {sortedNotes.map((item, index) => {\r\n          return (\r\n            <Note\r\n              item={item}\r\n              key={index}\r\n              index={index}\r\n              handleDate={handleDate}\r\n              saveAllNotes={saveAllNotes}\r\n              handleChange={handleChange}\r\n              isNoteSaved={isNoteSaved}\r\n              deleteNote={deleteNote}\r\n              saveNote={saveNote}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n","C:\\Users\\HP\\Documents\\Tests\\dphi\\diary\\src\\components\\notes\\Note.js",["56"],"import React, { useState, useRef } from \"react\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nimport Styles from \"./note.module.scss\";\r\n\r\nconst Note = ({\r\n  handleChange,\r\n  deleteNote,\r\n  item,\r\n  key,\r\n  index,\r\n  saveAllNotes,\r\n  handleDate,\r\n}) => {\r\n  const [isNoteSaved, setIsNoteSaved] = useState(false);\r\n\r\n  const saveNote = () => {\r\n    saveAllNotes();\r\n    setIsNoteSaved(true);\r\n  };\r\n\r\n  const editNote = () => {\r\n    setIsNoteSaved(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={Styles.notes_note}\r\n      style={{ backgroundColor: `${item.color}` }}\r\n    >\r\n      <textarea\r\n        rows=\"50\"\r\n        cols=\"25\"\r\n        type=\"text\"\r\n        name=\"note\"\r\n        disabled={!isNoteSaved ? false : true}\r\n        value={item.note}\r\n        placeholder=\"Note\"\r\n        onChange={(e) => handleChange(item.id, e.target.value)}\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        name=\"date\"\r\n        disabled={!isNoteSaved ? false : true}\r\n        value={item.date}\r\n        placeholder=\"Note\"\r\n        onChange={(e) => handleDate(item.id, e.target.value)}\r\n      />\r\n      <div className={Styles.dateAndActions}>\r\n        <span>{new Date(item.currentDate).toDateString()}</span>\r\n        <div className={Styles.dateAndActions_actions}>\r\n          <div>\r\n            <DeleteIcon\r\n              style={{\r\n                fontSize: \"20px\",\r\n                cursor: \"pointer\",\r\n                marginRight: \"25px\",\r\n              }}\r\n              onClick={(e) => deleteNote(e, index)}\r\n            />\r\n          </div>\r\n          {!isNoteSaved ? (\r\n            <div>\r\n              <SendIcon\r\n                style={{\r\n                  fontSize: \"20px\",\r\n                  cursor: \"pointer\",\r\n                  marginRight: \"25px\",\r\n                }}\r\n                onClick={(e) => saveNote()}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <EditIcon\r\n                style={{\r\n                  fontSize: \"20px\",\r\n                  cursor: \"pointer\",\r\n                  marginRight: \"25px\",\r\n                }}\r\n                onClick={(e) => editNote()}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","C:\\Users\\HP\\Documents\\Tests\\dphi\\diary\\src\\layout\\side-nav\\SideNav.js",[],"C:\\Users\\HP\\Documents\\Tests\\dphi\\diary\\src\\layout\\top-nav\\search\\Search.js",[],"C:\\Users\\HP\\Documents\\Tests\\dphi\\diary\\src\\layout\\top-nav\\nav\\TopNav.js",[],"C:\\Users\\HP\\Documents\\Tests\\dphi\\diary\\src\\layout\\top-nav\\buttons\\Filter.js",[],"C:\\Users\\HP\\Documents\\Tests\\dphi\\diary\\src\\layout\\top-nav\\buttons\\Sort.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":18,"column":14,"nodeType":"63","endLine":18,"endColumn":42},{"ruleId":"64","severity":1,"message":"65","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"68","line":3,"column":8,"nodeType":"66","messageId":"67","endLine":3,"endColumn":14},{"ruleId":"69","severity":1,"message":"70","line":24,"column":40,"nodeType":"71","messageId":"72","endLine":24,"endColumn":42},{"ruleId":"64","severity":1,"message":"73","line":1,"column":27,"nodeType":"66","messageId":"67","endLine":1,"endColumn":33},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"react-hooks/exhaustive-deps","Assignments to the 'sample' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Search' is defined but never used.","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation"]